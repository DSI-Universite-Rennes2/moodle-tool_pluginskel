## Every recipe file must provide at least the component property.
component: local_plugin

## Human readable name of the plugin.
name: Example plugin generated

## Human readable release number.
release: "0.1.0"

## Plugin version number, e.g. 2016062100. Will be set to current date if left empty.
#version: 2016121200

## Required Moodle version, e.g. 2015051100 or "2.9".
requires: "2.9"

## Plugin maturity level
maturity: MATURITY_BETA

## Copyright holder(s) of the generated files and classes.
copyright: 2016 Alexandru Elisei <alexandru.elisei@gmail.com>, David Mudr√°k <david@moodle.com>

## If the plugin depends on other plugins, declare the dependencies.
dependencies:
  - plugin: mod_forum
    version: ANY_VERSION
  - plugin: tool_another
    version: 2016121200

## Features flags can control generation of optional files/code fragments.
features:
  ## If the flag "all" is set, all features are enabled.
  all: false
  ## Alternatively, you can selectively enable or disable particular features.
  readme: true
  license: true
  settings: true
  dbupgrade: true

## Capabilities defined by the plugin
capabilities:
  - name: viewsomething
    captype: view
    contextlevel: CONTEXT_MODULE
    archetypes:
      - role: student
        permission: CAP_ALLOW
      - role: editingteacher
        permission: CAP_ALLOW
    clonepermissionsfrom: moodle/course:view
  - name: editsomething
    captype: write

## Register observers for some events
observers:
  - eventname: \core\event\something_happened
  - eventname: \core\event\something_else_happened

## Explicitly added strings
#strings:
#  - id: mycustomstring
#    text: You can add 'extra' strings via the recipe file.
#  - id: mycustomstring2
#    text: Another string with {$a->some} placeholder.

## Explicitly added contents, such as files not covered by the generator logic.
extra:
  files:
    - path: mycustomfile.php
      skel: php
      description: Explicitly generated PHP file.
